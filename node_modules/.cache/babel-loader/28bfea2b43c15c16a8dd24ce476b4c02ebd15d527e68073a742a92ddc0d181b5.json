{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andrey\\\\Downloads\\\\pong_canvas_app\\\\src\\\\VoiceControl.js\",\n  _s = $RefreshSig$();\n// src/VoiceControl.js\nimport React, { useState, useEffect } from 'react';\n\n// Пример функции для создания клиента, замените на вашу логику\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst createClient = async () => {\n  return {\n    dubbing: true\n  }; // Пример возвращаемого объекта с dubbing\n};\nconst VoiceControl = () => {\n  _s();\n  const [client, setClient] = useState(null);\n  useEffect(() => {\n    // Инициализация клиента (например, для голосового управления)\n    const initClient = async () => {\n      try {\n        // Создаём клиента\n        const newClient = await createClient(); // Здесь вызывается ваша функция\n        setClient(newClient);\n      } catch (error) {\n        console.error('Произошла ошибка при создании клиента:', error);\n      }\n    };\n    initClient();\n  }, []);\n\n  // Проверяем, что client и dubbing существуют, перед их использованием\n  const handleVoiceAction = () => {\n    if (client && client.dubbing) {\n      console.log('Voice control active');\n      // Ваш код для использования client.dubbing\n    } else {\n      console.log('Ошибка: client или client.dubbing не определены');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Pong with Voice Control\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleVoiceAction,\n      children: \"\\u0418\\u0441\\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u044C \\u0433\\u043E\\u043B\\u043E\\u0441\\u043E\\u0432\\u043E\\u0435 \\u0443\\u043F\\u0440\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(VoiceControl, \"lRani6Q9/nBEsoa1p7AhzaLBb/o=\");\n_c = VoiceControl;\nexport default VoiceControl;\nvar _c;\n$RefreshReg$(_c, \"VoiceControl\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","createClient","dubbing","VoiceControl","_s","client","setClient","initClient","newClient","error","console","handleVoiceAction","log","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Andrey/Downloads/pong_canvas_app/src/VoiceControl.js"],"sourcesContent":["// src/VoiceControl.js\r\nimport React, { useState, useEffect } from 'react';\r\n\r\n// Пример функции для создания клиента, замените на вашу логику\r\nconst createClient = async () => {\r\n  return { dubbing: true }; // Пример возвращаемого объекта с dubbing\r\n};\r\n\r\nconst VoiceControl = () => {\r\n  const [client, setClient] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Инициализация клиента (например, для голосового управления)\r\n    const initClient = async () => {\r\n      try {\r\n        // Создаём клиента\r\n        const newClient = await createClient(); // Здесь вызывается ваша функция\r\n        setClient(newClient);\r\n      } catch (error) {\r\n        console.error('Произошла ошибка при создании клиента:', error);\r\n      }\r\n    };\r\n\r\n    initClient();\r\n  }, []);\r\n\r\n  // Проверяем, что client и dubbing существуют, перед их использованием\r\n  const handleVoiceAction = () => {\r\n    if (client && client.dubbing) {\r\n      console.log('Voice control active');\r\n      // Ваш код для использования client.dubbing\r\n    } else {\r\n      console.log('Ошибка: client или client.dubbing не определены');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Pong with Voice Control</h1>\r\n      <button onClick={handleVoiceAction}>Использовать голосовое управление</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VoiceControl;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAElD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;EAC/B,OAAO;IAAEC,OAAO,EAAE;EAAK,CAAC,CAAC,CAAC;AAC5B,CAAC;AAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMS,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF;QACA,MAAMC,SAAS,GAAG,MAAMP,YAAY,CAAC,CAAC,CAAC,CAAC;QACxCK,SAAS,CAACE,SAAS,CAAC;MACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;MAChE;IACF,CAAC;IAEDF,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMI,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAIN,MAAM,IAAIA,MAAM,CAACH,OAAO,EAAE;MAC5BQ,OAAO,CAACE,GAAG,CAAC,sBAAsB,CAAC;MACnC;IACF,CAAC,MAAM;MACLF,OAAO,CAACE,GAAG,CAAC,iDAAiD,CAAC;IAChE;EACF,CAAC;EAED,oBACEZ,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAI;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChCjB,OAAA;MAAQkB,OAAO,EAAEP,iBAAkB;MAAAE,QAAA,EAAC;IAAiC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3E,CAAC;AAEV,CAAC;AAACb,EAAA,CAlCID,YAAY;AAAAgB,EAAA,GAAZhB,YAAY;AAoClB,eAAeA,YAAY;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}