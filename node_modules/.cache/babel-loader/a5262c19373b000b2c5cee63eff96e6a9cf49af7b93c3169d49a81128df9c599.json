{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andrey\\\\Downloads\\\\pong_canvas_app\\\\src\\\\Pong.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState, useCallback } from 'react';\nimport { createAssistant, createSmartappDebugger } from '@salutejs/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initializeAssistant = (getState, getRecoveryState) => {\n  if (process.env.NODE_ENV === 'development') {\n    var _process$env$REACT_AP;\n    return createSmartappDebugger({\n      token: (_process$env$REACT_AP = process.env.REACT_APP_TOKEN) !== null && _process$env$REACT_AP !== void 0 ? _process$env$REACT_AP : '',\n      initPhrase: `Запусти ${process.env.REACT_APP_SMARTAPP}`,\n      getState,\n      nativePanel: {\n        defaultText: '',\n        screenshotMode: false,\n        tabIndex: -1\n      }\n    });\n  } else {\n    return createAssistant({\n      getState\n    });\n  }\n};\nconst Pong = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const animationRef = useRef(null);\n  const assistantRef = useRef(null); // Assistant ref initialization\n\n  const [difficulty, setDifficulty] = useState('easy');\n  const [gameOver, setGameOver] = useState(false);\n  const [winner, setWinner] = useState('');\n  const isGameOverRef = useRef(false);\n  const playerScore = useRef(0);\n  const botScore = useRef(0);\n  const playerY = useRef(150);\n  const [playerYState, setPlayerYState] = useState(150);\n  const ball = useRef({\n    x: 300,\n    y: 200,\n    dx: 4,\n    dy: 4,\n    radius: 7\n  });\n  const bot = useRef({\n    x: 580,\n    y: 150,\n    width: 10,\n    height: 80\n  });\n  useEffect(() => {\n    assistantRef.current = initializeAssistant(() => getStateForAssistant());\n    if (assistantRef.current) {\n      // Only call `onCommand` if assistantRef.current exists and supports the method\n      const assistant = assistantRef.current;\n      if (assistant.onCommand) {\n        assistant.onCommand('start_game', data => {\n          // Start game logic (easy or hard) based on voice command or other triggers\n          startGame(data.level);\n        });\n      }\n    }\n  }, []);\n  const getStateForAssistant = () => {\n    return {\n      item_selector: {\n        items: [{\n          number: 1,\n          title: 'Easy'\n        }, {\n          number: 2,\n          title: 'Hard'\n        }],\n        ignored_words: ['сложность', 'игра']\n      }\n    };\n  };\n  const startGame = useCallback(level => {\n    if (animationRef.current) cancelAnimationFrame(animationRef.current);\n    setDifficulty(level);\n    setGameOver(false);\n    isGameOverRef.current = false;\n    setWinner('');\n    playerScore.current = 0;\n    botScore.current = 0;\n    playerY.current = 150;\n    bot.current.y = 150;\n    setPlayerYState(150);\n    resetBall();\n    animationRef.current = requestAnimationFrame(gameLoop);\n  }, [gameLoop, resetBall]);\n\n  // The rest of the Pong game logic remains unchanged\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Pong Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: 600,\n      height: 400,\n      style: {\n        background: 'black',\n        display: 'block',\n        margin: 'auto'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '10px',\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => startGame('easy'),\n        children: \"Easy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => startGame('hard'),\n        children: \"Hard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), gameOver && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => startGame(difficulty),\n        children: \"Restart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'white'\n        },\n        children: [\"Player: \", playerScore.current, \" | Bot: \", botScore.current]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s(Pong, \"C7G+TBgyWuDdszGpAalcnqZWKvM=\");\n_c = Pong;\nexport default Pong;\nvar _c;\n$RefreshReg$(_c, \"Pong\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useCallback","createAssistant","createSmartappDebugger","jsxDEV","_jsxDEV","initializeAssistant","getState","getRecoveryState","process","env","NODE_ENV","_process$env$REACT_AP","token","REACT_APP_TOKEN","initPhrase","REACT_APP_SMARTAPP","nativePanel","defaultText","screenshotMode","tabIndex","Pong","_s","canvasRef","animationRef","assistantRef","difficulty","setDifficulty","gameOver","setGameOver","winner","setWinner","isGameOverRef","playerScore","botScore","playerY","playerYState","setPlayerYState","ball","x","y","dx","dy","radius","bot","width","height","current","getStateForAssistant","assistant","onCommand","data","startGame","level","item_selector","items","number","title","ignored_words","cancelAnimationFrame","resetBall","requestAnimationFrame","gameLoop","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","style","background","display","margin","marginTop","textAlign","onClick","color","_c","$RefreshReg$"],"sources":["C:/Users/Andrey/Downloads/pong_canvas_app/src/Pong.js"],"sourcesContent":["import React, {\r\n  useRef,\r\n  useEffect,\r\n  useState,\r\n  useCallback,\r\n} from 'react';\r\nimport { createAssistant, createSmartappDebugger } from '@salutejs/client';\r\n\r\nconst initializeAssistant = (getState, getRecoveryState) => {\r\n  if (process.env.NODE_ENV === 'development') {\r\n    return createSmartappDebugger({\r\n      token: process.env.REACT_APP_TOKEN ?? '',\r\n      initPhrase: `Запусти ${process.env.REACT_APP_SMARTAPP}`,\r\n      getState,\r\n      nativePanel: {\r\n        defaultText: '',\r\n        screenshotMode: false,\r\n        tabIndex: -1,\r\n      },\r\n    });\r\n  } else {\r\n    return createAssistant({ getState });\r\n  }\r\n};\r\n\r\nconst Pong = () => {\r\n  const canvasRef = useRef(null);\r\n  const animationRef = useRef(null);\r\n  const assistantRef = useRef(null); // Assistant ref initialization\r\n\r\n  const [difficulty, setDifficulty] = useState('easy');\r\n  const [gameOver, setGameOver] = useState(false);\r\n  const [winner, setWinner] = useState('');\r\n\r\n  const isGameOverRef = useRef(false);\r\n\r\n  const playerScore = useRef(0);\r\n  const botScore = useRef(0);\r\n\r\n  const playerY = useRef(150);\r\n  const [playerYState, setPlayerYState] = useState(150);\r\n\r\n  const ball = useRef({\r\n    x: 300,\r\n    y: 200,\r\n    dx: 4,\r\n    dy: 4,\r\n    radius: 7,\r\n  });\r\n\r\n  const bot = useRef({\r\n    x: 580,\r\n    y: 150,\r\n    width: 10,\r\n    height: 80,\r\n  });\r\n\r\n  useEffect(() => {\r\n    assistantRef.current = initializeAssistant(() => getStateForAssistant());\r\n\r\n    if (assistantRef.current) {\r\n      // Only call `onCommand` if assistantRef.current exists and supports the method\r\n      const assistant = assistantRef.current;\r\n      if (assistant.onCommand) {\r\n        assistant.onCommand('start_game', (data) => {\r\n          // Start game logic (easy or hard) based on voice command or other triggers\r\n          startGame(data.level);\r\n        });\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const getStateForAssistant = () => {\r\n    return {\r\n      item_selector: {\r\n        items: [\r\n          { number: 1, title: 'Easy' },\r\n          { number: 2, title: 'Hard' },\r\n        ],\r\n        ignored_words: ['сложность', 'игра'],\r\n      },\r\n    };\r\n  };\r\n\r\n  const startGame = useCallback(\r\n    (level) => {\r\n      if (animationRef.current) cancelAnimationFrame(animationRef.current);\r\n\r\n      setDifficulty(level);\r\n      setGameOver(false);\r\n      isGameOverRef.current = false;\r\n      setWinner('');\r\n      playerScore.current = 0;\r\n      botScore.current = 0;\r\n      playerY.current = 150;\r\n      bot.current.y = 150;\r\n      setPlayerYState(150);\r\n      resetBall();\r\n      animationRef.current = requestAnimationFrame(gameLoop);\r\n    },\r\n    [gameLoop, resetBall]\r\n  );\r\n\r\n  // The rest of the Pong game logic remains unchanged\r\n\r\n  return (\r\n    <div className=\"game-container\">\r\n      <h2>Pong Game</h2>\r\n      <canvas\r\n        ref={canvasRef}\r\n        width={600}\r\n        height={400}\r\n        style={{ background: 'black', display: 'block', margin: 'auto' }}\r\n      />\r\n      <div style={{ marginTop: '10px', textAlign: 'center' }}>\r\n        <button onClick={() => startGame('easy')}>Easy</button>\r\n        <button onClick={() => startGame('hard')}>Hard</button>\r\n        {gameOver && <button onClick={() => startGame(difficulty)}>Restart</button>}\r\n        <p style={{ color: 'white' }}>\r\n          Player: {playerScore.current} | Bot: {botScore.current}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pong;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}