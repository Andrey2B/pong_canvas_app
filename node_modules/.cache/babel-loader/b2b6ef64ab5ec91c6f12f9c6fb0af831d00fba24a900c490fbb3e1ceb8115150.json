{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andrey\\\\Downloads\\\\pong_canvas_app\\\\src\\\\components\\\\MazeCanvas.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction drawMaze(ctx, maze, player, enemy, tileSize) {\n  const rows = maze.length;\n  const cols = maze[0].length;\n  ctx.fillStyle = 'lightgreen';\n  ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\n  // Начало и конец\n  ctx.fillStyle = 'purple';\n  ctx.fillRect(1 * tileSize, 1 * tileSize, tileSize, tileSize);\n  ctx.fillRect((cols - 2) * tileSize, (rows - 2) * tileSize, tileSize, tileSize);\n  for (let y = 0; y < rows; y++) {\n    for (let x = 0; x < cols; x++) {\n      if (maze[y][x] === 1) {\n        ctx.fillStyle = 'black';\n        ctx.fillRect(x * tileSize, y * tileSize, tileSize, tileSize);\n      }\n    }\n  }\n\n  // Игрок\n  ctx.fillStyle = 'blue';\n  ctx.beginPath();\n  ctx.arc(player.x * tileSize + tileSize / 2, player.y * tileSize + tileSize / 2, tileSize / 3, 0, Math.PI * 2);\n  ctx.fill();\n\n  // Враг\n  ctx.fillStyle = 'red';\n  ctx.beginPath();\n  ctx.arc(enemy.x * tileSize + tileSize / 2, enemy.y * tileSize + tileSize / 2, tileSize / 3, 0, Math.PI * 2);\n  ctx.fill();\n}\nconst MazeCanvas = ({\n  maze,\n  player,\n  enemy\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const [canvasSize, setCanvasSize] = useState({\n    width: 0,\n    height: 0\n  });\n  useEffect(() => {\n    const updateCanvasSize = () => {\n      const paddingRight = 320;\n      const paddingBottom = 100;\n      const width = window.innerWidth - paddingRight;\n      const height = window.innerHeight - paddingBottom;\n      setCanvasSize({\n        width: Math.floor(width),\n        height: Math.floor(height)\n      });\n    };\n    updateCanvasSize();\n    window.addEventListener(\"resize\", updateCanvasSize);\n    return () => window.removeEventListener(\"resize\", updateCanvasSize);\n  }, []);\n  const tileSize = Math.min(canvasSize.width / maze[0].length, canvasSize.height / maze.length);\n  useEffect(() => {\n    if (canvasRef.current && canvasSize.width && canvasSize.height) {\n      canvasRef.current.width = tileSize * maze[0].length;\n      canvasRef.current.height = tileSize * maze.length;\n      const ctx = canvasRef.current.getContext(\"2d\");\n      ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n      drawMaze(ctx, maze, player, enemy, tileSize);\n    }\n  }, [maze, player, enemy, tileSize, canvasSize]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"maze-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      id: \"maze\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n};\n_s(MazeCanvas, \"l9Yv8R6K2rjcAyBFmtewNxzOelU=\");\n_c = MazeCanvas;\nexport default MazeCanvas;\nvar _c;\n$RefreshReg$(_c, \"MazeCanvas\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","drawMaze","ctx","maze","player","enemy","tileSize","rows","length","cols","fillStyle","fillRect","canvas","width","height","y","x","beginPath","arc","Math","PI","fill","MazeCanvas","_s","canvasRef","canvasSize","setCanvasSize","updateCanvasSize","paddingRight","paddingBottom","window","innerWidth","innerHeight","floor","addEventListener","removeEventListener","min","current","getContext","clearRect","className","children","ref","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Andrey/Downloads/pong_canvas_app/src/components/MazeCanvas.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\n\r\nfunction drawMaze(ctx, maze, player, enemy, tileSize) {\r\n    const rows = maze.length;\r\n    const cols = maze[0].length;\r\n\r\n    ctx.fillStyle = 'lightgreen';\r\n    ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n\r\n    // Начало и конец\r\n    ctx.fillStyle = 'purple';\r\n    ctx.fillRect(1 * tileSize, 1 * tileSize, tileSize, tileSize);\r\n    ctx.fillRect((cols - 2) * tileSize, (rows - 2) * tileSize, tileSize, tileSize);\r\n\r\n    for (let y = 0; y < rows; y++) {\r\n        for (let x = 0; x < cols; x++) {\r\n            if (maze[y][x] === 1) {\r\n                ctx.fillStyle = 'black';\r\n                ctx.fillRect(x * tileSize, y * tileSize, tileSize, tileSize);\r\n            }\r\n        }\r\n    }\r\n\r\n    // Игрок\r\n    ctx.fillStyle = 'blue';\r\n    ctx.beginPath();\r\n    ctx.arc(\r\n        player.x * tileSize + tileSize / 2,\r\n        player.y * tileSize + tileSize / 2,\r\n        tileSize / 3, 0, Math.PI * 2\r\n    );\r\n    ctx.fill();\r\n\r\n    // Враг\r\n    ctx.fillStyle = 'red';\r\n    ctx.beginPath();\r\n    ctx.arc(\r\n        enemy.x * tileSize + tileSize / 2,\r\n        enemy.y * tileSize + tileSize / 2,\r\n        tileSize / 3, 0, Math.PI * 2\r\n    );\r\n    ctx.fill();\r\n}\r\n\r\nconst MazeCanvas = ({ maze, player, enemy }) => {\r\n    const canvasRef = useRef(null);\r\n    const [canvasSize, setCanvasSize] = useState({ width: 0, height: 0 });\r\n\r\n    useEffect(() => {\r\n        const updateCanvasSize = () => {\r\n            const paddingRight = 320;\r\n            const paddingBottom = 100;\r\n\r\n            const width = window.innerWidth - paddingRight;\r\n            const height = window.innerHeight - paddingBottom;\r\n\r\n            setCanvasSize({\r\n                width: Math.floor(width),\r\n                height: Math.floor(height),\r\n            });\r\n        };\r\n\r\n        updateCanvasSize();\r\n        window.addEventListener(\"resize\", updateCanvasSize);\r\n        return () => window.removeEventListener(\"resize\", updateCanvasSize);\r\n    }, []);\r\n\r\n    const tileSize = Math.min(\r\n        canvasSize.width / maze[0].length,\r\n        canvasSize.height / maze.length\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (canvasRef.current && canvasSize.width && canvasSize.height) {\r\n            canvasRef.current.width = tileSize * maze[0].length;\r\n            canvasRef.current.height = tileSize * maze.length;\r\n\r\n            const ctx = canvasRef.current.getContext(\"2d\");\r\n            ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\r\n            drawMaze(ctx, maze, player, enemy, tileSize);\r\n        }\r\n    }, [maze, player, enemy, tileSize, canvasSize]);\r\n\r\n    return (\r\n        <div className=\"maze-wrapper\">\r\n            <canvas ref={canvasRef} id=\"maze\" />\r\n        </div>\r\n    );\r\n};\r\nexport default MazeCanvas;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}