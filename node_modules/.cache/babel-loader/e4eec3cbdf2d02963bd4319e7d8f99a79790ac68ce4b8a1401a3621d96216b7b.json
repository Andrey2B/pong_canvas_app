{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andrey\\\\Downloads\\\\pong_canvas_app\\\\src\\\\Pong.js\",\n  _s = $RefreshSig$();\n// src/Pong.js\nimport React, { useRef, useEffect, useState, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Pong = ({\n  gameStatus\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const animationRef = useRef(null);\n  const [difficulty, setDifficulty] = useState('easy');\n  const [gameOver, setGameOver] = useState(false);\n  const [winner, setWinner] = useState('');\n  const isGameOverRef = useRef(false);\n  const playerScore = useRef(0);\n  const botScore = useRef(0);\n  const playerY = useRef(150);\n  const [playerYState, setPlayerYState] = useState(150);\n  const ball = useRef({\n    x: 300,\n    y: 200,\n    dx: 4,\n    dy: 4,\n    radius: 7\n  });\n  const bot = useRef({\n    x: 580,\n    y: 150,\n    width: 10,\n    height: 80\n  });\n  const getBallSpeed = useCallback(() => difficulty === 'hard' ? 7 : 4, [difficulty]);\n  const getBotSpeed = useCallback(() => difficulty === 'hard' ? 6 : 1, [difficulty]);\n  const resetBall = useCallback(() => {\n    const speed = getBallSpeed();\n    const angle = Math.random() * Math.PI / 2 - Math.PI / 4;\n    const direction = Math.random() > 0.5 ? 1 : -1;\n    ball.current.x = 300;\n    ball.current.y = 200;\n    ball.current.dx = Math.cos(angle) * speed * direction;\n    ball.current.dy = Math.sin(angle) * speed;\n  }, [getBallSpeed]);\n  const updateBot = useCallback(() => {\n    const center = bot.current.y + bot.current.height / 2;\n    const target = ball.current.y;\n    const botSpeed = getBotSpeed();\n    const offset = difficulty === 'easy' ? 30 : 10;\n    if (Math.abs(center - target) > offset) {\n      if (center < target) bot.current.y += botSpeed;else bot.current.y -= botSpeed;\n    }\n    bot.current.y = Math.max(0, Math.min(400 - bot.current.height, bot.current.y));\n  }, [difficulty, getBotSpeed]);\n  const update = useCallback(() => {\n    if (isGameOverRef.current || gameStatus === 'paused') return;\n    const b = ball.current;\n    b.x += b.dx;\n    b.y += b.dy;\n    if (b.y - b.radius < 0 || b.y + b.radius > 400) {\n      b.dy *= -1;\n    }\n    updateBot();\n    if (b.x - b.radius < 30 && b.y > playerY.current && b.y < playerY.current + 80) {\n      const relativeY = playerY.current + 40 - b.y;\n      const normalized = relativeY / 40;\n      const angle = normalized * (Math.PI / 4);\n      const speed = Math.sqrt(b.dx * b.dx + b.dy * b.dy);\n      b.dx = Math.cos(angle) * speed;\n      b.dy = -Math.sin(angle) * speed;\n      if (b.dx < 0) b.dx = -b.dx;\n    }\n    if (b.x + b.radius > bot.current.x && b.y > bot.current.y && b.y < bot.current.y + bot.current.height) {\n      const relativeY = bot.current.y + bot.current.height / 2 - b.y;\n      const normalized = relativeY / (bot.current.height / 2);\n      const angle = normalized * (Math.PI / 4);\n      const speed = Math.sqrt(b.dx * b.dx + b.dy * b.dy);\n      b.dx = -Math.cos(angle) * speed;\n      b.dy = -Math.sin(angle) * speed;\n      if (b.dx > 0) b.dx = -b.dx;\n    }\n    if (b.x < 0) {\n      botScore.current += 1;\n      if (botScore.current >= 10) {\n        isGameOverRef.current = true;\n        setWinner('Bot Wins!');\n        setGameOver(true);\n        ball.current.dx = 0;\n        ball.current.dy = 0;\n        return;\n      }\n      resetBall();\n    } else if (b.x > 600) {\n      playerScore.current += 1;\n      if (playerScore.current >= 10) {\n        isGameOverRef.current = true;\n        setWinner('Player Wins!');\n        setGameOver(true);\n        ball.current.dx = 0;\n        ball.current.dy = 0;\n        return;\n      }\n      resetBall();\n    }\n  }, [gameStatus, resetBall, updateBot]);\n  const render = useCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n    ctx.clearRect(0, 0, canvas.width, canvas.height); // Clear canvas for each frame\n\n    // Draw player paddle\n    ctx.fillStyle = 'white';\n    ctx.fillRect(20, playerY.current, 10, 80);\n\n    // Draw bot paddle\n    ctx.fillRect(bot.current.x, bot.current.y, bot.current.width, bot.current.height);\n\n    // Draw ball\n    ctx.beginPath();\n    ctx.arc(ball.current.x, ball.current.y, ball.current.radius, 0, Math.PI * 2);\n    ctx.fill();\n\n    // Display scores\n    ctx.font = '30px Arial';\n    ctx.fillText(`${playerScore.current}`, 200, 50);\n    ctx.fillText(`${botScore.current}`, 400, 50);\n\n    // Game Over screen\n    if (gameOver) {\n      ctx.fillText('Game Over', 220, 180);\n      ctx.fillText(winner, 210, 220);\n    }\n  }, [gameOver, winner]);\n  const gameLoop = useCallback(() => {\n    update();\n    render();\n    if (!isGameOverRef.current) {\n      animationRef.current = requestAnimationFrame(gameLoop);\n    }\n  }, [update, render]);\n  const startGame = useCallback(() => {\n    if (animationRef.current) cancelAnimationFrame(animationRef.current);\n    setGameOver(false);\n    isGameOverRef.current = false;\n    setWinner('');\n    playerScore.current = 0;\n    botScore.current = 0;\n    playerY.current = 150;\n    bot.current.y = 150;\n    setPlayerYState(150);\n    resetBall();\n    animationRef.current = requestAnimationFrame(gameLoop);\n  }, [gameLoop, resetBall]);\n  const pauseGame = () => {\n    setGameOver(false);\n  };\n  const stopGame = () => {\n    if (animationRef.current) cancelAnimationFrame(animationRef.current);\n    setGameOver(true);\n    setWinner('Game Stopped');\n  };\n  useEffect(() => {\n    const handleKeyDown = e => {\n      const speed = 30;\n      if (e.key === 'ArrowUp') {\n        playerY.current = Math.max(0, playerY.current - speed);\n      } else if (e.key === 'ArrowDown') {\n        playerY.current = Math.min(400 - 80, playerY.current + speed);\n      }\n      setPlayerYState(playerY.current);\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, []);\n  useEffect(() => {\n    if (gameStatus === 'playing') startGame();else if (gameStatus === 'paused') pauseGame();else if (gameStatus === 'stopped') stopGame();\n  }, [gameStatus, startGame, pauseGame, stopGame]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    width: 600,\n    height: 400\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 217,\n    columnNumber: 10\n  }, this);\n};\n_s(Pong, \"A7vuEeUm7mm9YcQgQpHCgVDlMu8=\");\n_c = Pong;\nexport default Pong;\nvar _c;\n$RefreshReg$(_c, \"Pong\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useCallback","jsxDEV","_jsxDEV","Pong","gameStatus","_s","canvasRef","animationRef","difficulty","setDifficulty","gameOver","setGameOver","winner","setWinner","isGameOverRef","playerScore","botScore","playerY","playerYState","setPlayerYState","ball","x","y","dx","dy","radius","bot","width","height","getBallSpeed","getBotSpeed","resetBall","speed","angle","Math","random","PI","direction","current","cos","sin","updateBot","center","target","botSpeed","offset","abs","max","min","update","b","relativeY","normalized","sqrt","render","canvas","ctx","getContext","clearRect","fillStyle","fillRect","beginPath","arc","fill","font","fillText","gameLoop","requestAnimationFrame","startGame","cancelAnimationFrame","pauseGame","stopGame","handleKeyDown","e","key","window","addEventListener","removeEventListener","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Andrey/Downloads/pong_canvas_app/src/Pong.js"],"sourcesContent":["// src/Pong.js\nimport React, { useRef, useEffect, useState, useCallback } from 'react';\n\nconst Pong = ({ gameStatus }) => {\n  const canvasRef = useRef(null);\n  const animationRef = useRef(null);\n\n  const [difficulty, setDifficulty] = useState('easy');\n  const [gameOver, setGameOver] = useState(false);\n  const [winner, setWinner] = useState('');\n\n  const isGameOverRef = useRef(false);\n\n  const playerScore = useRef(0);\n  const botScore = useRef(0);\n\n  const playerY = useRef(150);\n  const [playerYState, setPlayerYState] = useState(150);\n\n  const ball = useRef({\n    x: 300,\n    y: 200,\n    dx: 4,\n    dy: 4,\n    radius: 7,\n  });\n\n  const bot = useRef({\n    x: 580,\n    y: 150,\n    width: 10,\n    height: 80,\n  });\n\n  const getBallSpeed = useCallback(() => (difficulty === 'hard' ? 7 : 4), [difficulty]);\n  const getBotSpeed = useCallback(() => (difficulty === 'hard' ? 6 : 1), [difficulty]);\n\n  const resetBall = useCallback(() => {\n    const speed = getBallSpeed();\n    const angle = (Math.random() * Math.PI) / 2 - Math.PI / 4;\n    const direction = Math.random() > 0.5 ? 1 : -1;\n\n    ball.current.x = 300;\n    ball.current.y = 200;\n    ball.current.dx = Math.cos(angle) * speed * direction;\n    ball.current.dy = Math.sin(angle) * speed;\n  }, [getBallSpeed]);\n\n  const updateBot = useCallback(() => {\n    const center = bot.current.y + bot.current.height / 2;\n    const target = ball.current.y;\n    const botSpeed = getBotSpeed();\n    const offset = difficulty === 'easy' ? 30 : 10;\n\n    if (Math.abs(center - target) > offset) {\n      if (center < target) bot.current.y += botSpeed;\n      else bot.current.y -= botSpeed;\n    }\n\n    bot.current.y = Math.max(0, Math.min(400 - bot.current.height, bot.current.y));\n  }, [difficulty, getBotSpeed]);\n\n  const update = useCallback(() => {\n    if (isGameOverRef.current || gameStatus === 'paused') return;\n\n    const b = ball.current;\n    b.x += b.dx;\n    b.y += b.dy;\n\n    if (b.y - b.radius < 0 || b.y + b.radius > 400) {\n      b.dy *= -1;\n    }\n\n    updateBot();\n\n    if (b.x - b.radius < 30 && b.y > playerY.current && b.y < playerY.current + 80) {\n      const relativeY = (playerY.current + 40) - b.y;\n      const normalized = relativeY / 40;\n      const angle = normalized * (Math.PI / 4);\n      const speed = Math.sqrt(b.dx * b.dx + b.dy * b.dy);\n\n      b.dx = Math.cos(angle) * speed;\n      b.dy = -Math.sin(angle) * speed;\n      if (b.dx < 0) b.dx = -b.dx;\n    }\n\n    if (\n      b.x + b.radius > bot.current.x &&\n      b.y > bot.current.y &&\n      b.y < bot.current.y + bot.current.height\n    ) {\n      const relativeY = (bot.current.y + bot.current.height / 2) - b.y;\n      const normalized = relativeY / (bot.current.height / 2);\n      const angle = normalized * (Math.PI / 4);\n      const speed = Math.sqrt(b.dx * b.dx + b.dy * b.dy);\n\n      b.dx = -Math.cos(angle) * speed;\n      b.dy = -Math.sin(angle) * speed;\n      if (b.dx > 0) b.dx = -b.dx;\n    }\n\n    if (b.x < 0) {\n      botScore.current += 1;\n      if (botScore.current >= 10) {\n        isGameOverRef.current = true;\n        setWinner('Bot Wins!');\n        setGameOver(true);\n        ball.current.dx = 0;\n        ball.current.dy = 0;\n        return;\n      }\n      resetBall();\n    } else if (b.x > 600) {\n      playerScore.current += 1;\n      if (playerScore.current >= 10) {\n        isGameOverRef.current = true;\n        setWinner('Player Wins!');\n        setGameOver(true);\n        ball.current.dx = 0;\n        ball.current.dy = 0;\n        return;\n      }\n      resetBall();\n    }\n  }, [gameStatus, resetBall, updateBot]);\n\n  const render = useCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    ctx.clearRect(0, 0, canvas.width, canvas.height); // Clear canvas for each frame\n\n    // Draw player paddle\n    ctx.fillStyle = 'white';\n    ctx.fillRect(20, playerY.current, 10, 80); \n\n    // Draw bot paddle\n    ctx.fillRect(bot.current.x, bot.current.y, bot.current.width, bot.current.height);\n\n    // Draw ball\n    ctx.beginPath();\n    ctx.arc(ball.current.x, ball.current.y, ball.current.radius, 0, Math.PI * 2);\n    ctx.fill();\n\n    // Display scores\n    ctx.font = '30px Arial';\n    ctx.fillText(`${playerScore.current}`, 200, 50);\n    ctx.fillText(`${botScore.current}`, 400, 50);\n\n    // Game Over screen\n    if (gameOver) {\n      ctx.fillText('Game Over', 220, 180);\n      ctx.fillText(winner, 210, 220);\n    }\n  }, [gameOver, winner]);\n\n  const gameLoop = useCallback(() => {\n    update();\n    render();\n    if (!isGameOverRef.current) {\n      animationRef.current = requestAnimationFrame(gameLoop);\n    }\n  }, [update, render]);\n\n  const startGame = useCallback(() => {\n    if (animationRef.current) cancelAnimationFrame(animationRef.current);\n\n    setGameOver(false);\n    isGameOverRef.current = false;\n    setWinner('');\n    playerScore.current = 0;\n    botScore.current = 0;\n    playerY.current = 150;\n    bot.current.y = 150;\n    setPlayerYState(150);\n    resetBall();\n    animationRef.current = requestAnimationFrame(gameLoop);\n  }, [gameLoop, resetBall]);\n\n  const pauseGame = () => {\n    setGameOver(false);\n  };\n\n  const stopGame = () => {\n    if (animationRef.current) cancelAnimationFrame(animationRef.current);\n    setGameOver(true);\n    setWinner('Game Stopped');\n  };\n\n  useEffect(() => {\n    const handleKeyDown = (e) => {\n      const speed = 30;\n      if (e.key === 'ArrowUp') {\n        playerY.current = Math.max(0, playerY.current - speed);\n      } else if (e.key === 'ArrowDown') {\n        playerY.current = Math.min(400 - 80, playerY.current + speed);\n      }\n      setPlayerYState(playerY.current);\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (gameStatus === 'playing') startGame();\n    else if (gameStatus === 'paused') pauseGame();\n    else if (gameStatus === 'stopped') stopGame();\n  }, [gameStatus, startGame, pauseGame, stopGame]);\n\n  return <canvas ref={canvasRef} width={600} height={400} />;\n};\n\nexport default Pong;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}