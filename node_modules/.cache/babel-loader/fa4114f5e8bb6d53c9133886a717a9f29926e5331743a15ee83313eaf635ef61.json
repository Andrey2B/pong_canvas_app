{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andrey\\\\Downloads\\\\pong_canvas_app\\\\src\\\\Pong.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState, useCallback } from 'react';\nimport { createAssistant, createSmartappDebugger } from '@salutejs/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initializeAssistant = (getState, getRecoveryState) => {\n  if (process.env.NODE_ENV === 'development') {\n    var _process$env$REACT_AP;\n    return createSmartappDebugger({\n      token: (_process$env$REACT_AP = process.env.REACT_APP_TOKEN) !== null && _process$env$REACT_AP !== void 0 ? _process$env$REACT_AP : '',\n      initPhrase: `Запусти ${process.env.REACT_APP_SMARTAPP}`,\n      getState,\n      nativePanel: {\n        defaultText: '',\n        screenshotMode: false,\n        tabIndex: -1\n      }\n    });\n  } else {\n    return createAssistant({\n      getState\n    });\n  }\n};\nconst Pong = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const animationRef = useRef(null);\n  const assistantRef = useRef(null); // Ассистент для обработки голосовых команд\n\n  const [difficulty, setDifficulty] = useState('easy');\n  const [gameOver, setGameOver] = useState(false);\n  const [winner, setWinner] = useState('');\n  const playerY = useRef(150);\n  const [playerYState, setPlayerYState] = useState(150);\n  const ball = useRef({\n    x: 300,\n    y: 200,\n    dx: 4,\n    dy: 4,\n    radius: 7\n  });\n  const bot = useRef({\n    x: 580,\n    y: 150,\n    width: 10,\n    height: 80\n  });\n\n  // Инициализация ассистента\n  useEffect(() => {\n    assistantRef.current = initializeAssistant(() => getStateForAssistant());\n    assistantRef.current.on('data', event => {\n      if (event.type === 'character') {\n        var _event$character;\n        console.log('assistant.on(data): character:', event === null || event === void 0 ? void 0 : (_event$character = event.character) === null || _event$character === void 0 ? void 0 : _event$character.id);\n      } else if (event.type === 'insets') {\n        console.log('assistant.on(data): insets');\n      } else {\n        const {\n          action\n        } = event;\n        dispatchAssistantAction(action);\n      }\n    });\n  }, []);\n  const dispatchAssistantAction = action => {\n    if (action) {\n      switch (action.type) {\n        case 'move_up':\n          movePlayer('up');\n          break;\n        case 'move_down':\n          movePlayer('down');\n          break;\n        default:\n          break;\n      }\n    }\n  };\n  const movePlayer = direction => {\n    const speed = 30;\n    if (direction === 'up') {\n      playerY.current = Math.max(0, playerY.current - speed);\n    } else if (direction === 'down') {\n      playerY.current = Math.min(400 - 80, playerY.current + speed);\n    }\n    setPlayerYState(playerY.current);\n  };\n  const getBallSpeed = useCallback(() => difficulty === 'hard' ? 7 : 4, [difficulty]);\n  const getBotSpeed = useCallback(() => difficulty === 'hard' ? 6 : 1, [difficulty]);\n  const resetBall = useCallback(() => {\n    const speed = getBallSpeed();\n    const angle = Math.random() * Math.PI / 2 - Math.PI / 4;\n    const direction = Math.random() > 0.5 ? 1 : -1;\n    ball.current.x = 300;\n    ball.current.y = 200;\n    ball.current.dx = Math.cos(angle) * speed * direction;\n    ball.current.dy = Math.sin(angle) * speed;\n  }, [getBallSpeed]);\n  const updateBot = useCallback(() => {\n    const center = bot.current.y + bot.current.height / 2;\n    const target = ball.current.y;\n    const botSpeed = getBotSpeed();\n    const offset = difficulty === 'easy' ? 30 : 10;\n    if (Math.abs(center - target) > offset) {\n      if (center < target) bot.current.y += botSpeed;else bot.current.y -= botSpeed;\n    }\n    bot.current.y = Math.max(0, Math.min(400 - bot.current.height, bot.current.y));\n  }, [difficulty, getBotSpeed]);\n  const update = useCallback(() => {\n    if (isGameOverRef.current) return;\n    const b = ball.current;\n    b.x += b.dx;\n    b.y += b.dy;\n    if (b.y - b.radius < 0 || b.y + b.radius > 400) {\n      b.dy *= -1;\n    }\n    updateBot();\n    if (b.x - b.radius < 30 && b.y > playerY.current && b.y < playerY.current + 80) {\n      const relativeY = playerY.current + 40 - b.y;\n      const normalized = relativeY / 40;\n      const angle = normalized * (Math.PI / 4);\n      const speed = Math.sqrt(b.dx * b.dx + b.dy * b.dy);\n      b.dx = Math.cos(angle) * speed;\n      b.dy = -Math.sin(angle) * speed;\n      if (b.dx < 0) b.dx = -b.dx;\n    }\n    if (b.x + b.radius > bot.current.x && b.y > bot.current.y && b.y < bot.current.y + bot.current.height) {\n      const relativeY = bot.current.y + bot.current.height / 2 - b.y;\n      const normalized = relativeY / (bot.current.height / 2);\n      const angle = normalized * (Math.PI / 4);\n      const speed = Math.sqrt(b.dx * b.dx + b.dy * b.dy);\n      b.dx = -Math.cos(angle) * speed;\n      b.dy = -Math.sin(angle) * speed;\n      if (b.dx > 0) b.dx = -b.dx;\n    }\n    if (b.x < 0) {\n      botScore.current += 1;\n      if (botScore.current >= 10) {\n        isGameOverRef.current = true;\n        setWinner('Bot Wins!');\n        setGameOver(true);\n        ball.current.dx = 0;\n        ball.current.dy = 0;\n        return;\n      }\n      resetBall();\n    } else if (b.x > 600) {\n      playerScore.current += 1;\n      if (playerScore.current >= 10) {\n        isGameOverRef.current = true;\n        setWinner('Player Wins!');\n        setGameOver(true);\n        ball.current.dx = 0;\n        ball.current.dy = 0;\n        return;\n      }\n      resetBall();\n    }\n  }, [resetBall, updateBot]);\n  const render = useCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.fillStyle = 'white';\n    ctx.fillRect(20, playerY.current, 10, 80);\n    ctx.fillRect(bot.current.x, bot.current.y, bot.current.width, bot.current.height);\n    ctx.beginPath();\n    ctx.arc(ball.current.x, ball.current.y, ball.current.radius, 0, Math.PI * 2);\n    ctx.fill();\n    ctx.font = '30px Arial';\n    ctx.fillText(`${playerScore.current}`, 200, 50);\n    ctx.fillText(`${botScore.current}`, 400, 50);\n    if (gameOver) {\n      ctx.fillText('Game Over', 220, 180);\n      ctx.fillText(winner, 210, 220);\n    }\n  }, [gameOver, winner]);\n  const gameLoop = useCallback(() => {\n    update();\n    render();\n    if (!isGameOverRef.current) {\n      animationRef.current = requestAnimationFrame(gameLoop);\n    }\n  }, [update, render]);\n  const startGame = useCallback(level => {\n    if (animationRef.current) cancelAnimationFrame(animationRef.current);\n    setDifficulty(level);\n    setGameOver(false);\n    isGameOverRef.current = false;\n    setWinner('');\n    playerScore.current = 0;\n    botScore.current = 0;\n    playerY.current = 150;\n    bot.current.y = 150;\n    setPlayerYState(150);\n    resetBall();\n    animationRef.current = requestAnimationFrame(gameLoop);\n  }, [gameLoop, resetBall]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Pong Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: 600,\n      height: 400,\n      style: {\n        background: 'black',\n        display: 'block',\n        margin: 'auto'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '10px',\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => startGame('easy'),\n        children: \"Easy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => startGame('hard'),\n        children: \"Hard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), gameOver && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => startGame(difficulty),\n        children: \"Restart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'white'\n        },\n        children: [\"Player: \", playerScore.current, \" | Bot: \", botScore.current]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 241,\n    columnNumber: 5\n  }, this);\n};\n_s(Pong, \"UkyS/QcjM91xzChRURQQUqjWhnQ=\");\n_c = Pong;\nexport default Pong;\nvar _c;\n$RefreshReg$(_c, \"Pong\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useCallback","createAssistant","createSmartappDebugger","jsxDEV","_jsxDEV","initializeAssistant","getState","getRecoveryState","process","env","NODE_ENV","_process$env$REACT_AP","token","REACT_APP_TOKEN","initPhrase","REACT_APP_SMARTAPP","nativePanel","defaultText","screenshotMode","tabIndex","Pong","_s","canvasRef","animationRef","assistantRef","difficulty","setDifficulty","gameOver","setGameOver","winner","setWinner","playerY","playerYState","setPlayerYState","ball","x","y","dx","dy","radius","bot","width","height","current","getStateForAssistant","on","event","type","_event$character","console","log","character","id","action","dispatchAssistantAction","movePlayer","direction","speed","Math","max","min","getBallSpeed","getBotSpeed","resetBall","angle","random","PI","cos","sin","updateBot","center","target","botSpeed","offset","abs","update","isGameOverRef","b","relativeY","normalized","sqrt","botScore","playerScore","render","canvas","ctx","getContext","clearRect","fillStyle","fillRect","beginPath","arc","fill","font","fillText","gameLoop","requestAnimationFrame","startGame","level","cancelAnimationFrame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","style","background","display","margin","marginTop","textAlign","onClick","color","_c","$RefreshReg$"],"sources":["C:/Users/Andrey/Downloads/pong_canvas_app/src/Pong.js"],"sourcesContent":["import React, {\r\n  useRef,\r\n  useEffect,\r\n  useState,\r\n  useCallback,\r\n} from 'react';\r\nimport { createAssistant, createSmartappDebugger } from '@salutejs/client';\r\n\r\nconst initializeAssistant = (getState, getRecoveryState) => {\r\n  if (process.env.NODE_ENV === 'development') {\r\n    return createSmartappDebugger({\r\n      token: process.env.REACT_APP_TOKEN ?? '',\r\n      initPhrase: `Запусти ${process.env.REACT_APP_SMARTAPP}`,\r\n      getState,\r\n      nativePanel: {\r\n        defaultText: '',\r\n        screenshotMode: false,\r\n        tabIndex: -1,\r\n      },\r\n    });\r\n  } else {\r\n    return createAssistant({ getState });\r\n  }\r\n};\r\n\r\nconst Pong = () => {\r\n  const canvasRef = useRef(null);\r\n  const animationRef = useRef(null);\r\n  const assistantRef = useRef(null); // Ассистент для обработки голосовых команд\r\n\r\n  const [difficulty, setDifficulty] = useState('easy');\r\n  const [gameOver, setGameOver] = useState(false);\r\n  const [winner, setWinner] = useState('');\r\n\r\n  const playerY = useRef(150);\r\n  const [playerYState, setPlayerYState] = useState(150);\r\n\r\n  const ball = useRef({\r\n    x: 300,\r\n    y: 200,\r\n    dx: 4,\r\n    dy: 4,\r\n    radius: 7,\r\n  });\r\n\r\n  const bot = useRef({\r\n    x: 580,\r\n    y: 150,\r\n    width: 10,\r\n    height: 80,\r\n  });\r\n\r\n  // Инициализация ассистента\r\n  useEffect(() => {\r\n    assistantRef.current = initializeAssistant(() => getStateForAssistant());\r\n\r\n    assistantRef.current.on('data', (event) => {\r\n      if (event.type === 'character') {\r\n        console.log('assistant.on(data): character:', event?.character?.id);\r\n      } else if (event.type === 'insets') {\r\n        console.log('assistant.on(data): insets');\r\n      } else {\r\n        const { action } = event;\r\n        dispatchAssistantAction(action);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const dispatchAssistantAction = (action) => {\r\n    if (action) {\r\n      switch (action.type) {\r\n        case 'move_up':\r\n          movePlayer('up');\r\n          break;\r\n        case 'move_down':\r\n          movePlayer('down');\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  };\r\n\r\n  const movePlayer = (direction) => {\r\n    const speed = 30;\r\n    if (direction === 'up') {\r\n      playerY.current = Math.max(0, playerY.current - speed);\r\n    } else if (direction === 'down') {\r\n      playerY.current = Math.min(400 - 80, playerY.current + speed);\r\n    }\r\n    setPlayerYState(playerY.current);\r\n  };\r\n\r\n  const getBallSpeed = useCallback(() => (difficulty === 'hard' ? 7 : 4), [difficulty]);\r\n  const getBotSpeed = useCallback(() => (difficulty === 'hard' ? 6 : 1), [difficulty]);\r\n\r\n  const resetBall = useCallback(() => {\r\n    const speed = getBallSpeed();\r\n    const angle = (Math.random() * Math.PI) / 2 - Math.PI / 4;\r\n    const direction = Math.random() > 0.5 ? 1 : -1;\r\n\r\n    ball.current.x = 300;\r\n    ball.current.y = 200;\r\n    ball.current.dx = Math.cos(angle) * speed * direction;\r\n    ball.current.dy = Math.sin(angle) * speed;\r\n  }, [getBallSpeed]);\r\n\r\n  const updateBot = useCallback(() => {\r\n    const center = bot.current.y + bot.current.height / 2;\r\n    const target = ball.current.y;\r\n    const botSpeed = getBotSpeed();\r\n    const offset = difficulty === 'easy' ? 30 : 10;\r\n\r\n    if (Math.abs(center - target) > offset) {\r\n      if (center < target) bot.current.y += botSpeed;\r\n      else bot.current.y -= botSpeed;\r\n    }\r\n\r\n    bot.current.y = Math.max(0, Math.min(400 - bot.current.height, bot.current.y));\r\n  }, [difficulty, getBotSpeed]);\r\n\r\n  const update = useCallback(() => {\r\n    if (isGameOverRef.current) return;\r\n\r\n    const b = ball.current;\r\n    b.x += b.dx;\r\n    b.y += b.dy;\r\n\r\n    if (b.y - b.radius < 0 || b.y + b.radius > 400) {\r\n      b.dy *= -1;\r\n    }\r\n\r\n    updateBot();\r\n\r\n    if (b.x - b.radius < 30 && b.y > playerY.current && b.y < playerY.current + 80) {\r\n      const relativeY = (playerY.current + 40) - b.y;\r\n      const normalized = relativeY / 40;\r\n      const angle = normalized * (Math.PI / 4);\r\n      const speed = Math.sqrt(b.dx * b.dx + b.dy * b.dy);\r\n\r\n      b.dx = Math.cos(angle) * speed;\r\n      b.dy = -Math.sin(angle) * speed;\r\n      if (b.dx < 0) b.dx = -b.dx;\r\n    }\r\n\r\n    if (\r\n      b.x + b.radius > bot.current.x &&\r\n      b.y > bot.current.y &&\r\n      b.y < bot.current.y + bot.current.height\r\n    ) {\r\n      const relativeY = (bot.current.y + bot.current.height / 2) - b.y;\r\n      const normalized = relativeY / (bot.current.height / 2);\r\n      const angle = normalized * (Math.PI / 4);\r\n      const speed = Math.sqrt(b.dx * b.dx + b.dy * b.dy);\r\n\r\n      b.dx = -Math.cos(angle) * speed;\r\n      b.dy = -Math.sin(angle) * speed;\r\n      if (b.dx > 0) b.dx = -b.dx;\r\n    }\r\n\r\n    if (b.x < 0) {\r\n      botScore.current += 1;\r\n      if (botScore.current >= 10) {\r\n        isGameOverRef.current = true;\r\n        setWinner('Bot Wins!');\r\n        setGameOver(true);\r\n        ball.current.dx = 0;\r\n        ball.current.dy = 0;\r\n        return;\r\n      }\r\n      resetBall();\r\n    } else if (b.x > 600) {\r\n      playerScore.current += 1;\r\n      if (playerScore.current >= 10) {\r\n        isGameOverRef.current = true;\r\n        setWinner('Player Wins!');\r\n        setGameOver(true);\r\n        ball.current.dx = 0;\r\n        ball.current.dy = 0;\r\n        return;\r\n      }\r\n      resetBall();\r\n    }\r\n  }, [resetBall, updateBot]);\r\n\r\n  const render = useCallback(() => {\r\n    const canvas = canvasRef.current;\r\n    if (!canvas) return;\r\n\r\n    const ctx = canvas.getContext('2d');\r\n    if (!ctx) return;\r\n\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n    ctx.fillStyle = 'white';\r\n\r\n    ctx.fillRect(20, playerY.current, 10, 80);\r\n    ctx.fillRect(bot.current.x, bot.current.y, bot.current.width, bot.current.height);\r\n\r\n    ctx.beginPath();\r\n    ctx.arc(ball.current.x, ball.current.y, ball.current.radius, 0, Math.PI * 2);\r\n    ctx.fill();\r\n\r\n    ctx.font = '30px Arial';\r\n    ctx.fillText(`${playerScore.current}`, 200, 50);\r\n    ctx.fillText(`${botScore.current}`, 400, 50);\r\n\r\n    if (gameOver) {\r\n      ctx.fillText('Game Over', 220, 180);\r\n      ctx.fillText(winner, 210, 220);\r\n    }\r\n  }, [gameOver, winner]);\r\n\r\n  const gameLoop = useCallback(() => {\r\n    update();\r\n    render();\r\n    if (!isGameOverRef.current) {\r\n      animationRef.current = requestAnimationFrame(gameLoop);\r\n    }\r\n  }, [update, render]);\r\n\r\n  const startGame = useCallback(\r\n    (level) => {\r\n      if (animationRef.current) cancelAnimationFrame(animationRef.current);\r\n\r\n      setDifficulty(level);\r\n      setGameOver(false);\r\n      isGameOverRef.current = false;\r\n      setWinner('');\r\n      playerScore.current = 0;\r\n      botScore.current = 0;\r\n      playerY.current = 150;\r\n      bot.current.y = 150;\r\n      setPlayerYState(150);\r\n      resetBall();\r\n      animationRef.current = requestAnimationFrame(gameLoop);\r\n    },\r\n    [gameLoop, resetBall]\r\n  );\r\n\r\n  return (\r\n    <div className=\"game-container\">\r\n      <h2>Pong Game</h2>\r\n      <canvas\r\n        ref={canvasRef}\r\n        width={600}\r\n        height={400}\r\n        style={{ background: 'black', display: 'block', margin: 'auto' }}\r\n      />\r\n      <div style={{ marginTop: '10px', textAlign: 'center' }}>\r\n        <button onClick={() => startGame('easy')}>Easy</button>\r\n        <button onClick={() => startGame('hard')}>Hard</button>\r\n        {gameOver && <button onClick={() => startGame(difficulty)}>Restart</button>}\r\n        <p style={{ color: 'white' }}>\r\n          Player: {playerScore.current} | Bot: {botScore.current}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pong;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}